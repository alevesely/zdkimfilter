# Config file for zdkimfilter
# Syntax of each line: [ "#" comment ] | name [ "=" ] [ value ]
# Backslashes ("\") can be used to wrap multiple physical lines into a single
# logical one, up to 8K.
# Valid names are shown below.
# Value types can be strings, array of strings, integers, or boolean,
# according to the name. Types and default values are shown commented; all
# boolean values default to "N", and "Y" is assumed if the value is omitted.

# all_mode
# Courier runs all-mode filters after non-all-mode ones, in alphabetical order.
# Non-all-mode filters can be whitelisted by local filters. In addition, any
# global filter can whitelist the filters running after it.
all_mode = @zdkimfilter_mode@

# verbose
# Loosely control the amount of output.
# The filter prints to stderr, assuming that courier's logger will capture it
# and send to syslog. Hence log entries can also be filtered by severity.
# Verbosity and severity are not strictly related. Verbosity is tentatively
# being used as follows (each level includes the preceding ones):
# 0: startup issues or totally unexpected errors
# 1: failures or unexpected events
# 2: removal of A-R on verify; missing domain on sign
# 3: start/stop info, relevant verify results, sign errors
# 4: response returned to courier each message
# 5: verify errors except no signature
# 6: domain/selector used on signing, any A-R field found
# 7: no key on signing; no signature and count of A-R written on verify
# 8: more debugging
# default:
# verbose = 3

# directory for domain private keys
# File names should be identical to the domain name:
# If user@example.com sends via authenticated smtp, then zdkimfilter looks
# for a file named example.com in this directory.
# domain_keys = @COURIER_SYSCONF_INSTALL@/filters/keys

# canonicalization for header/body. can be simple or relaxed
# header_canon_relaxed = N
# body_canon_relaxed = N

# sign_algo can be rsa-sha1 or rsa-sha256
# sign_rsa_sha1 = N

# Global selector
# Each key should be a softlink; the basename of the linked to file
# contains the selector. If the basename starts with the same string as the
# link, i.e. the domain name, then that initial part and an optional dot
# are skipped. In addition, an extension of ".private" or ".pem" is discarded.
# E.g., the following will all result in assigning selector "s" to the key for
# "example.com":
#
#    example.com -> ../anywhere/example.com.s
#    example.com -> ../anywhere/example.coms
#    example.com -> ../anywhere/s
#    example.com -> ../anywhere/example.com.s.private
#    example.com -> ../anywhere/example.coms.private
#    example.com -> ../anywhere/s.private
#    example.com -> ../anywhere/example.com.s.pem
#    example.com -> ../anywhere/example.coms.pem
#    example.com -> ../anywhere/s.pem
#
# If a selector name cannot be determined that way, then the selector specified
# here, if any, or the constant "s" will be used.
#
# selector = s

# sign_hfields
# header fields to be signed.
# This is a space-separated list of header field names.
# The default value is implemented in OpenDKIM according to RFC 4871 Sect. 5.5
# sign_hfields = From Sender Reply-To Subject Date Message-ID To Cc    \
# MIME-Version Content-Type Content-Transfer-Encoding Content-ID       \
# Content-Description Resent-Date Resent-From Resent-Sender Resent-To  \
# Resent-Cc Resent-Message-ID In-Reply-To References List-Id List-Help \
# List-Unsubscribe List-Subscribe List-Post List-Owner List-Archive

# skip_hfields
# header fields not to be signed; they are discarded at an earlier stage.
# This is a space-separated list of header field names.
# The default value is implemented in OpenDKIM according to RFC 4871 Sect. 5.5
# skip_hfields = Return-Path Received Comments Keywords


# no_signlen
# set this to avoid specifying the l= parameter of the body length
# no_signlen

# temporary directory. libopendkim uses /var/tmp by default.
# if you specify a value of /tmp/xyz, zdkimfilter attempts mkdir of it
# on loading, if it cannot stat it
# tmp = /var/tmp

# on some errors, return 432; otherwise, just let the msg through
# tempfail_on_error


# default_domain
# used if no domain can be inferred from authenticated user id

# no_spf
# if Courier set Received-SPF: pass for sender or helo, report that in A-R
# unless no_spf is set
# no_spf

# add_a_r_anyway
# Add an A-R field also if no signature or other A-R had been found

# no_author_domain
# Check the "From:" domain (as determined by the OpenDKIM library) exists.
# If NXDOMAIN, reject the message. If the domain publishes an ADSP policy
# that states that any message from them can be discarded if it doesn't have
# a valid author domain signature, the message is also rejected.
# If the policy just says they sign all messages, the message is accepted and
# the result reported in A-R for method "x-dkim-adsp".

# check_reputation
# make a query to get the reputation of the signer. The result is reported in
# A-R for method "x-dkim-rep" according to the two values specified next

# reputation_fail
# any values greater or equal than this are reported as "fail"
# reputation_fail = 32767

# reputation_pass
# any values less or equal to this are reported as "pass"
# values V in between, reputation_pass < V < reputation_fail, are reported
# as "neutral". According to dkim-reputation.org, 0 is neutral and positive
# values give an estimate of the spamminess of a given user. They reserve
# negative values for whitelisting. Their range is thus -1000 <= rep <= 1000.
# reputation_pass = -32768


